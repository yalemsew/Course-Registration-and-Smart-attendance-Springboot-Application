spring.application.name=course-registration-core
server.port=8080
spring.datasource.url=jdbc:mysql://107.172.133.208:3306/cs544-project
spring.datasource.username=cs544-project
spring.datasource.password=xF2xmtcbMs3XJmPm
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
# Use the standard naming strategy to avoid automatic conversion
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
# Kafka
spring.kafka.bootstrap-servers=107.172.133.208:9092
spring.kafka.consumer.group-id=gid
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# JWT SHA256 Hash
# The secret key must be an HMAC hash string of 256 bits; otherwise, the token generation will throw an error.
security.jwt.secret-key=3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b
# 1h in millisecond
security.jwt.expiration-time=3600000
